:load start
val esco0 = classes.join(ships, ships("class")===classes("class"))
val esco1 = classes.join(ships, ships("class")===classes("class"))
val esco0 = classes.join(ships, ships("class")===classes("class")).select("country","bore","name")
val esco1 = classes.join(outcomes, outcomes("ship")===classes("class")).select(col("country"),col("bore"),col("ship").alias("name"))
esco1.union(esco0).show()
val esco = esco1.union(esco0)
esco.withColumn("poder", pow(col("bore"),3))
esco.withColumn("poder", pow(col("bore"),3)).show()
esco.withColumn("poder", pow(col("bore"),3)/2).show()
esco.withColumn("poder", pow(col("bore"),3)/2).groupBy("country").avg("poder").show()
esco.withColumn("poder", pow(col("bore"),3)/2).groupBy("country").avg("poder").select(col("country"), col("avg(poder)"))
esco.withColumn("poder", pow(col("bore"),3)/2).groupBy("country").avg("poder").select(col("country"), round(col("avg(poder)"),2))
esco.withColumn("poder", pow(col("bore"),3)/2).groupBy("country").avg("poder").select(col("country"), round(col("avg(poder)"),2)).show()
